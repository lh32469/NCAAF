# This is a basic workflow to help you get started with Actions

name: Master

on:
  push:
    branches:
     - '*master'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: ncaaf

    steps:
      - uses: actions/checkout@v2

      - name: Substitute Secrets
        run: |
          sed -e 's/KUBE_SERVER/${{ secrets.KUBE_SERVER }}/g' kube_config > config.1
          sed -e 's/KUBE_TOKEN/${{ secrets.KUBE_TOKEN }}/g' config.1 > k_config
          cat k_config
          # Set hostname to just Application name for master branch
          sed -e "s/HOSTNAME/${APP_NAME}/g" weather-template.yaml > weather.yaml

      - name: Display Config
        run: cat k_config

      # Step that does that actual cache save and restore
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Package
        run: mvn -B package

      - name: Docker Build
        env:
          BRANCH: ${GITHUB_REF##*/}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker build -t lh32469/weather-${GITHUB_REF##*/}:${GITHUB_RUN_NUMBER} .

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Push image to Docker Hub
        run: docker push lh32469/weather-${GITHUB_REF##*/}:${GITHUB_RUN_NUMBER}

      - name: Check existing Kubernetes Deployment
        id: deployment_check
        env:
          KUBECONFIG: ./k_config
          # get -n weather-pipeline deployment/weather
        run: kubectl get -n ${APP_NAME}-${GITHUB_REF##*/} deployment/${APP_NAME}
        continue-on-error: true

      - name: Create new Kubernetes Deployment
        if: steps.deployment_check.outcome != 'success'
        env:
          KUBECONFIG: ./k_config
        run: |
          kubectl create namespace ${APP_NAME}-${GITHUB_REF##*/}
          kubectl apply -f weather.yaml -n ${APP_NAME}-${GITHUB_REF##*/}

      - name: Deploy new image to Kubernetes
        env:
          KUBECONFIG: ./k_config
          # set image -n weather-pipeline deployment/weather weather=lh32469/weather-pipeline:42
        run: >
          kubectl set image -n ${APP_NAME}-${GITHUB_REF##*/} deployment/${APP_NAME}
          ${APP_NAME}=lh32469/${APP_NAME}-${GITHUB_REF##*/}:${GITHUB_RUN_NUMBER}


  env:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Print Environment Variables
        run: env
      - name: List Directory
        env:
          BRANCH: ${GITHUB_REF##*/}
        run: ls -l
      - name: Print Branch Name
        env:
          BRANCH: ${GITHUB_REF##*/}
        run: echo BRANCH=${BRANCH}
